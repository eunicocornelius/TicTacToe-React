{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"6PAIA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,OAKnB,SAASC,EAAgBC,GAYrB,IAXA,IAAMC,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGDC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC1BE,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAGN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACjE,OAAON,EAAQI,GAGvB,OAAO,K,IAGHG,E,2KAESL,GAAI,IAAD,OACd,OACE,kBAACR,EAAD,CACAI,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAMpC,OACE,6BACE,yBAAKN,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GA3BTC,IAAMC,WAkCpBC,E,kDACF,WAAYjB,GAAO,IAAD,8BACd,cAAMA,IACDkB,MAAQ,CACTC,QAAQ,CAAC,CACLd,QAAQe,MAAM,GAAGC,KAAK,QAE1BC,WAAY,EACZC,SAAS,GAPC,E,wDAWRhB,GACR,IAAMY,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQmB,QAC7BpB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAI,IACtCV,KAAKY,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBrB,QAAQA,KAEZiB,WAAYH,EAAQX,OACpBe,SAAUV,KAAKK,MAAMK,a,6BAItBI,GACHd,KAAKY,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAItB,IAeFC,EAfC,OACCT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS1B,EAAgByB,EAAQxB,SAEjC0B,EAAQZ,EAAQa,KAAI,SAACL,EAAKM,GAC5B,IAAMC,EAAOD,EACb,eAAeA,EACf,mBACA,OACI,wBAAIE,IAAKF,GACL,4BAAQ/B,QAAW,kBAAM,EAAKkC,OAAOH,KAAQC,OAW3D,OAJMN,EADAE,EACS,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAK,KAG1D,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACW,EAAD,CACIP,QAAWwB,EAAQxB,QACnBH,QAAW,SAACK,GAAD,OAAO,EAAK8B,YAAY9B,OAGzC,yBAAKN,UAAU,aACb,6BAAM2B,GACN,4BAAKG,S,GApEIhB,IAAMC,WA6EzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.207d3ee1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n    return(\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares){\r\n    const lines = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ];\r\n\r\n    for(let i = 0; i < lines.length; i++){\r\n        const [a,b,c] = lines[i];\r\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n              history:[{\r\n                  squares:Array(9).fill(null),\r\n              }],\r\n              stepNumber: 0,\r\n              xIsNext: true,\r\n          };\r\n      }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X':'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares:squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step,move) => {\r\n            const desc = move ? \r\n            'Go to move #'+move :\r\n            'Go to game start';\r\n            return(\r\n                <li key={move}>\r\n                    <button onClick = {() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n        let status;\r\n\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next Player: ' + (this.state.xIsNext ? 'X': 'O');\r\n        }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n                squares = {current.squares}\r\n                onClick = {(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}